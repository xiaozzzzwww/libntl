# 设置库的基本信息
cmake_minimum_required(VERSION 3.10)
project(ntl)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(libntl "libntl")
set(VCPKG_LIBRARY_VERSION 1.0.0)
set(VCPKG_LIBRARY_CATEGORY Libraries)

# 设置库的依赖项（如果有）
# set(VCPKG_DEPENDENCIES dependency1 dependency2)

# 定义库的构建和安装过程

file(GLOB_RECURSE SOURCE_FILES
    "src/*.cpp"
    # 添加其他源文件
)

file(GLOB_RECURSE HEADER_FILES
"*.h"
)

include_directories(include)

# 添加库的目标
add_library(libntl STATIC
    ${SOURCE_FILES}
    ${HEADER_FILES}
)

add_library(ntl SHARED
    ${SOURCE_FILES}
    ${HEADER_FILES}
)

# 设置头文件搜索路径
target_include_directories(${libntl} PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

set("VCPKG_LIBRARY_VERSION" 11)
set("VCPKG_LIBRARY_VERSION_MAJOR" 5.1)
# 设置库的版本号
set_target_properties(${libntl} PROPERTIES
    VERSION ${VCPKG_LIBRARY_VERSION}
    SOVERSION ${VCPKG_LIBRARY_VERSION_MAJOR}
)

# 安装库和头文件
install(TARGETS ${libntl}
    ARCHIVE DESTINATION lib
    LIBRARY DESTINATION lib
    RUNTIME DESTINATION bin
)

install(FILES ${HEADER_FILES}
    DESTINATION include/${libntl}
)

