# 设置库的基本信息
cmake_minimum_required(VERSION 3.10)

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE "RelWithDebInfo" CACHE STRING "Build type")
    message(STATUS "No build type selected, default to ${CMAKE_BUILD_TYPE}")
endif()

option(NTL_USE_STATIC_LIBS "Use static of NTL libraries" ON)


project(ntl)
set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(libntl "libntl")

add_definitions(-w)

# 设置库的依赖项（如果有）
# set(VCPKG_DEPENDENCIES dependency1 dependency2)

# 定义库的构建和安装过程

file(GLOB_RECURSE SOURCE_FILES
    "src/*.cpp"
    # 添加其他源文件
)

file(GLOB_RECURSE HEADER_FILES
"include/NTL/*.h"
)

set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR}/lib)

include_directories(include)

# 添加库的目标
add_library(${libntl} STATIC
    ${SOURCE_FILES}
    ${HEADER_FILES}
)

# 设置头文件搜索路径
target_include_directories(${libntl} PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)

# 安装库和头文件
install(TARGETS ${libntl}
    LIBRARY DESTINATION lib
)

install(FILES ${HEADER_FILES}
    DESTINATION include/NTL
)



# file(COPY "*./lib" DESTINATION "./lib")
# file(COPY "*.bin" DESTINATION "./bin")

